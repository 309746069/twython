{"name":"Twython","tagline":"An actively maintained, pure Python wrapper for the Twitter API. Supports both the normal and streaming Twitter APIs.","body":"Twython\r\n=======\r\n\r\n```Twython``` is a library providing an easy (and up-to-date) way to access Twitter data in Python. Actively maintained and featuring support for both Python 2.6+ and Python 3, it's been battle tested by companies, educational institutions and individuals alike. Try it today!\r\n\r\nFeatures\r\n--------\r\n\r\n* Query data for:\r\n   - User information\r\n   - Twitter lists\r\n   - Timelines\r\n   - Direct Messages\r\n   - and anything found in [the docs](https://dev.twitter.com/docs/api/1.1)\r\n* Image Uploading!\r\n   - **Update user status with an image**\r\n   - Change user avatar\r\n   - Change user background image\r\n   - Change user banner image\r\n* Support for Twitter's Streaming API\r\n* Seamless Python 3 support!\r\n\r\nInstallation\r\n------------\r\n\r\n    (pip install | easy_install) twython\r\n\r\n... or, you can clone the repo and install it the old fashioned way\r\n\r\n    git clone git://github.com/ryanmcgrath/twython.git\r\n    cd twython\r\n    sudo python setup.py install\r\n\r\nUsage\r\n-----\r\n\r\n##### Authorization URL\r\n\r\n```python\r\nfrom twython import Twython\r\n\r\nt = Twython(app_key, app_secret)\r\n\r\nauth_props = t.get_authentication_tokens(callback_url='http://google.com')\r\n\r\noauth_token = auth_props['oauth_token']\r\noauth_token_secret = auth_props['oauth_token_secret']\r\n\r\nprint 'Connect to Twitter via: %s' % auth_props['auth_url']\r\n```\r\n\r\nBe sure you have a URL set up to handle the callback after the user has allowed your app to access their data, the callback can be used for storing their final OAuth Token and OAuth Token Secret in a database for use at a later date.\r\n\r\n##### Handling the callback\r\n\r\n```python\r\nfrom twython import Twython\r\n\r\n# oauth_token_secret comes from the previous step\r\n# if needed, store that in a session variable or something.\r\n# oauth_verifier and oauth_token from the previous call is now REQUIRED # to pass to get_authorized_tokens\r\n\r\n# In Django, to get the oauth_verifier and oauth_token from the callback\r\n# url querystring, you might do something like this:\r\n# oauth_token = request.GET.get('oauth_token')\r\n# oauth_verifier = request.GET.get('oauth_verifier')\r\n\r\nt = Twython(app_key, app_secret,\r\n            oauth_token, oauth_token_secret)\r\n\r\nauth_tokens = t.get_authorized_tokens(oauth_verifier)\r\nprint auth_tokens\r\n```\r\n\r\n*Function definitions (i.e. get_home_timeline()) can be found by reading over twython/endpoints.py*\r\n\r\n##### Getting a user home timeline\r\n\r\n```python\r\nfrom twython import Twython\r\n\r\n# oauth_token and oauth_token_secret are the final tokens produced\r\n# from the 'Handling the callback' step\r\n\r\nt = Twython(app_key, app_secret,\r\n            oauth_token, oauth_token_secret)\r\n\r\n# Returns an dict of the user home timeline\r\nprint t.get_home_timeline()\r\n```\r\n\r\n##### Catching exceptions\r\n> Twython offers three Exceptions currently: TwythonError, TwythonAuthError and TwythonRateLimitError\r\n\r\n```python\r\nfrom twython import Twython, TwythonAuthError\r\n\r\nt = Twython(MY_WRONG_APP_KEY, MY_WRONG_APP_SECRET,\r\n            BAD_OAUTH_TOKEN, BAD_OAUTH_TOKEN_SECRET)\r\n\r\ntry:\r\n    t.verify_credentials()\r\nexcept TwythonAuthError as e:\r\n    print e\r\n```\r\n\r\n#### Dynamic function arguments\r\n> Keyword arguments to functions are mapped to the functions available for each endpoint in the Twitter API docs. Doing this allows us to be incredibly flexible in querying the Twitter API, so changes to the API aren't held up from you using them by this library.\r\n\r\n> https://dev.twitter.com/docs/api/1.1/post/statuses/update says it takes \"status\" amongst other arguments\r\n\r\n```python\r\nfrom twython import Twython, TwythonAuthError\r\n\r\nt = Twython(app_key, app_secret,\r\n            oauth_token, oauth_token_secret)\r\n\r\ntry:\r\n    t.update_status(status='Hey guys!')\r\nexcept TwythonError as e:\r\n    print e\r\n```\r\n\r\n> https://dev.twitter.com/docs/api/1.1/get/search/tweets says it takes \"q\" and \"result_type\" amongst other arguments\r\n\r\n```python\r\nfrom twython import Twython, TwythonAuthError\r\n\r\nt = Twython(app_key, app_secret,\r\n            oauth_token, oauth_token_secret)\r\n\r\ntry:\r\n    t.search(q='Hey guys!')\r\n    t.search(q='Hey guys!', result_type='popular')\r\nexcept TwythonError as e:\r\n    print e\r\n```\r\n\r\n##### Streaming API\r\n\r\n```python\r\nfrom twython import TwythonStreamer\r\n\r\nclass MyStreamer(TwythonStreamer):\r\n    def on_success(self, data):\r\n        print data\r\n\r\n    def on_error(self, status_code, data):\r\n        print status_code, data\r\n\r\n# Requires Authentication as of Twitter API v1.1\r\nstream = MyStreamer(APP_KEY, APP_SECRET,\r\n                    OAUTH_TOKEN, OAUTH_TOKEN_SECRET)\r\n\r\nstream.statuses.filter(track='twitter')\r\n```\r\n\r\nNotes\r\n-----\r\n- Twython (as of 2.7.0) now supports ONLY Twitter v1.1 endpoints! Please see the **[Twitter v1.1 API Documentation](https://dev.twitter.com/docs/api/1.1)** to help migrate your API calls!\r\n- As of Twython 2.9.1, all method names conform to PEP8 standards. For backwards compatibility, we internally check and catch any calls made using the old (pre 2.9.1) camelCase method syntax. We will continue to support this for the foreseeable future for all old methods (raising a DeprecationWarning where appropriate), but you should update your code if you have the time.\r\n\r\nQuestions, Comments, etc?\r\n-------------------------\r\nMy hope is that Twython is so simple that you'd never *have* to ask any questions, but if you feel the need to contact me for this (or other) reasons, you can hit me up at ryan@venodesigns.net.\r\n\r\nOr if I'm to busy to answer, feel free to ping mikeh@ydekproductions.com as well.\r\n\r\nFollow us on Twitter:\r\n* **[@ryanmcgrath](http://twitter.com/ryanmcgrath)**\r\n* **[@mikehelmick](http://twitter.com/mikehelmick)**\r\n\r\nWant to help?\r\n-------------\r\nTwython is useful, but ultimately only as useful as the people using it (say that ten times fast!). If you'd like to help, write example code, contribute patches, document things on the wiki, tweet about it. Your help is always appreciated!\r\n","google":"UA-40660943-1","note":"Don't delete this file! It's used internally to help with page regeneration."}