{"name":"Twython","tagline":"An actively maintained, pure Python wrapper for the Twitter API. Supports both the normal and streaming Twitter APIs.","body":"Twython\r\n=======\r\n\r\n\r\n.. image:: https://travis-ci.org/ryanmcgrath/twython.png?branch=master\r\n        :target: https://travis-ci.org/ryanmcgrath/twython\r\n.. image:: https://pypip.in/d/twython/badge.png\r\n        :target: https://crate.io/packages/twython/\r\n.. image:: https://coveralls.io/repos/ryanmcgrath/twython/badge.png?branch=master\r\n        :target: https://coveralls.io/r/ryanmcgrath/twython?branch=master\r\n\r\n``Twython`` is the premier Python library providing an easy (and up-to-date) way to access Twitter data. Actively maintained and featuring support for Python 2.6+ and Python 3. It's been battle tested by companies, educational institutions and individuals alike. Try it today!\r\n\r\nFeatures\r\n--------\r\n\r\n- Query data for:\r\n    - User information\r\n    - Twitter lists\r\n    - Timelines\r\n    - Direct Messages\r\n    - and anything found in `the docs <https://dev.twitter.com/docs/api/1.1>`_\r\n- Image Uploading:\r\n    - Update user status with an image\r\n    - Change user avatar\r\n    - Change user background image\r\n    - Change user banner image\r\n- OAuth 2 Application Only (read-only) Support\r\n- Support for Twitter's Streaming API\r\n- Seamless Python 3 support!\r\n\r\nInstallation\r\n------------\r\n\r\nInstall Twython via `pip <http://www.pip-installer.org/>`_\r\n\r\n.. code-block:: bash\r\n\r\n    $ pip install twython\r\n\r\nor, with `easy_install <http://pypi.python.org/pypi/setuptools>`_\r\n\r\n.. code-block:: bash\r\n\r\n    $ easy_install twython\r\n\r\nBut, hey... `that's up to you <http://www.pip-installer.org/en/latest/other-tools.html#pip-compared-to-easy-install>`_.\r\n\r\nOr, if you want the code that is currently on GitHub\r\n\r\n.. code-block:: bash\r\n\r\n    git clone git://github.com/ryanmcgrath/twython.git\r\n    cd twython\r\n    python setup.py install\r\n\r\nDocumentation\r\n-------------\r\n\r\nDocumentation is available at https://twython.readthedocs.org/en/latest/\r\n\r\nStarting Out\r\n------------\r\n\r\nFirst, you'll want to head over to https://dev.twitter.com/apps and register an application!\r\n\r\nAfter you register, grab your applications ``Consumer Key`` and ``Consumer Secret`` from the application details tab.\r\n\r\nThe most common type of authentication is Twitter user authentication using OAuth 1. If you're a web app planning to have users sign up with their Twitter account and interact with their timelines, updating their status, and stuff like that this **is** the authentication for you!\r\n\r\nFirst, you'll want to import Twython\r\n\r\n.. code-block:: python\r\n\r\n    from twython import Twython\r\n\r\nAuthentication\r\n~~~~~~~~~~~~~~\r\n\r\nObtain Authorization URL\r\n^^^^^^^^^^^^^^^^^^^^^^^^\r\n\r\nNow, you'll want to create a Twython instance with your ``Consumer Key`` and ``Consumer Secret``\r\n\r\n    Only pass *callback_url* to *get_authentication_tokens* if your application is a Web Application\r\n\r\n    Desktop and Mobile Applications **do not** require a callback_url\r\n\r\n.. code-block:: python\r\n\r\n    APP_KEY = 'YOUR_APP_KEY'\r\n    APP_SECET = 'YOUR_APP_SECRET'\r\n\r\n    twitter = Twython(APP_KEY, APP_SECRET)\r\n\r\n    auth = twitter.get_authentication_tokens(callback_url='http://mysite.com/callback')\r\n\r\nFrom the ``auth`` variable, save the ``oauth_token`` and ``oauth_token_secret`` for later use (these are not the final auth tokens). In Django or other web frameworks, you might want to store it to a session variable\r\n\r\n.. code-block:: python\r\n\r\n    OAUTH_TOKEN = auth['oauth_token']\r\n    OAUTH_TOKEN_SECRET = auth['oauth_token_secret']\r\n\r\nSend the user to the authentication url, you can obtain it by accessing\r\n\r\n.. code-block:: python\r\n\r\n    auth['auth_url']\r\n\r\nHandling the Callback\r\n^^^^^^^^^^^^^^^^^^^^^\r\n\r\n    If your application is a Desktop or Mobile Application *oauth_verifier* will be the PIN code\r\n\r\nAfter they authorize your application to access some of their account details, they'll be redirected to the callback url you specified in ``get_autentication_tokens``\r\n\r\nYou'll want to extract the ``oauth_verifier`` from the url.\r\n\r\nDjango example:\r\n\r\n.. code-block:: python\r\n\r\n    oauth_verifier = request.GET['oauth_verifier']\r\n\r\nNow that you have the ``oauth_verifier`` stored to a variable, you'll want to create a new instance of Twython and grab the final user tokens\r\n\r\n.. code-block:: python\r\n\r\n    twitter = Twython(APP_KEY, APP_SECRET,\r\n                      OAUTH_TOKEN, OAUTH_TOKEN_SECRET)\r\n\r\n    final_step = twitter.get_authorized_tokens(oauth_verifier)\r\n\r\nOnce you have the final user tokens, store them in a database for later use!::\r\n\r\n    OAUTH_TOKEN = final_step['oauth_token']\r\n    OAUTH_TOKEN_SECERT = final_step['oauth_token_secret']\r\n\r\nFor OAuth 2 (Application Only, read-only) authentication, see `our documentation <https://twython.readthedocs.org/en/latest/usage/starting_out.html#oauth-2-application-authentication>`_\r\n\r\nDynamic Function Arguments\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nKeyword arguments to functions are mapped to the functions available for each endpoint in the Twitter API docs. Doing this allows us to be incredibly flexible in querying the Twitter API, so changes to the API aren't held up from you using them by this library.\r\n\r\nBasic Usage\r\n-----------\r\n\r\n**Function definitions (i.e. get_home_timeline()) can be found by reading over twython/endpoints.py**\r\n\r\nCreate a Twython instance with your application keys and the users OAuth tokens\r\n\r\n.. code-block:: python\r\n\r\n    from twython import Twython\r\n    twitter = Twython(APP_KEY, APP_SECRET\r\n                      OAUTH_TOKEN, OAUTH_TOKEN_SECRET)\r\n\r\nAuthenticated Users Home Timeline\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nDocumentation: https://dev.twitter.com/docs/api/1.1/get/statuses/home_timeline\r\n\r\n.. code-block:: python\r\n\r\n    twitter.get_home_timeline()\r\n\r\nUpdating Status\r\n~~~~~~~~~~~~~~~\r\n\r\nThis method makes use of dynamic arguments, `read more about them <https://twython.readthedocs.org/en/latest/usage/starting_out.html#dynamic-function-arguments>`_\r\n\r\nDocumentation: https://dev.twitter.com/docs/api/1/post/statuses/update\r\n\r\n.. code-block:: python\r\n\r\n    twitter.update_status(status='See how easy using Twython is!')\r\n\r\nSearching\r\n~~~~~~~~~\r\n\r\n    https://dev.twitter.com/docs/api/1.1/get/search/tweets says it takes \"q\" and \"result_type\" amongst other arguments\r\n\r\n.. code-block:: python\r\n\r\n    twitter.search(q='twitter')\r\n    twitter.search(q='twitter', result_type='popular')\r\n\r\nAdvanced Usage\r\n--------------\r\n\r\n- `Advanced Twython Usage <https://twython.readthedocs.org/en/latest/usage/advanced_usage.html>`_\r\n- `Streaming with Twython <https://twython.readthedocs.org/en/latest/usage/streaming_api.html>`_\r\n\r\n\r\nNotes\r\n-----\r\n\r\n- Twython 3.0.0 has been injected with 1000mgs of pure awesomeness! OAuth 2 application authentication is now supported. And a *whole lot* more! See the `CHANGELOG <https://github.com/ryanmcgrath/twython/blob/master/HISTORY.rst#300-2013-06-18>`_ for more details!\r\n\r\nQuestions, Comments, etc?\r\n-------------------------\r\n\r\nMy hope is that Twython is so simple that you'd never *have* to ask any questions, but if you feel the need to contact me for this (or other) reasons, you can hit me up at ryan@venodesigns.net.\r\n\r\nOr if I'm to busy to answer, feel free to ping mikeh@ydekproductions.com as well.\r\n\r\nFollow us on Twitter:\r\n\r\n- `@ryanmcgrath <https://twitter.com/ryanmcgrath>`_\r\n- `@mikehelmick <https://twitter.com/mikehelmick>`_\r\n\r\nWant to help?\r\n-------------\r\n\r\nTwython is useful, but ultimately only as useful as the people using it (say that ten times fast!). If you'd like to help, write example code, contribute patches, document things on the wiki, tweet about it. Your help is always appreciated!\r\n","google":"UA-40660943-1","note":"Don't delete this file! It's used internally to help with page regeneration."}